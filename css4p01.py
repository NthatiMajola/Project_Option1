# -*- coding: utf-8 -*-
"""CSS4P01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A8tfuFYWakoUl7BmJVMkgylz9Mekax66
"""

"""
import pandas as pd

# Assuming the file was uploaded to the root directory
df = pd.read_csv('/content/drive/MyDrive/downloads/movie_dataset.csv')

# Display the first few rows of the DataFrame
df.head()
"""
import os
os.listdir('/content')

print(os.getcwd())

import pandas as pd
df = pd.read_csv('movie_dataset.csv')
df.head()

df_cleaned = df.dropna()
print(df)

#Q1
highest_rated_movie= df_cleaned[df_cleaned['Rating']== df_cleaned['Rating'].max()]
print("Highest-rated movie:", highest_rated_movie['Title'].values[0])

#Q2
average_revenue = df_cleaned['Revenue (Millions)'].mean()
print("Average revenue of all movies:", average_revenue)

#Q3
average_revenue_2015_to_2017 = df_cleaned[(df_cleaned['Year'] >=2015) & (df_cleaned['Year'] <= 2017)]['Revenue (Millions)'].mean()
print("Average revenue of movies from 2015 to 2017:", average_revenue_2015_to_2017)


#Q4
movies_2016 = df_cleaned[df_cleaned['Year']== 2016]
num_movies_2016 = len(movies_2016)
print("number of movies released in 2016:", num_movies_2016)

#Q5
movies_nolan = df_cleaned[df_cleaned['Director'] == 'Christopher Nolan']
num_movies_nolan = len(movies_nolan)
print("Number of movies directed by Christopher Nolan:", num_movies_nolan)

#Q6
high_rated_movies = df_cleaned[df_cleaned['Rating'] >= 8.0]
num_high_rated_movies = len(high_rated_movies)
print("Number of movies with a rating of at least 8.0:", num_high_rated_movies)

#Q7
median_rating_nolan = movies_nolan['Rating'].median()
print("Median rating of movies directed by Christopher Nolan:", median_rating_nolan)

#Q8
year_highest_avg_rating = df_cleaned.groupby('Year')['Rating'].mean().idxmax()
print("Year with the highest average rating:",year_highest_avg_rating)

#q9
movies_2006 = df_cleaned[df_cleaned['Year'] == 2006]
movies_2016 = df_cleaned[df_cleaned['Year'] == 2016]
percentage_increase = ((len(movies_2016) - len(movies_2006)) /len(movies_2006))*100
print("Percentage increase in the number of movies between 2006 and 2016:", percentage_increase)

#Q10
from collections import Counter
all_actors = df_cleaned['Actors'].str.split(', ').sum()
most_common_actor = Counter(all_actors).most_common(1)[0][0]
print("The most common actor in all movies:", most_common_actor)

#Q11
unique_genres = df_cleaned['Genre'].str.split(',').explode().nunique()
print("Number of unique genres in the dataset:", unique_genres)

#Q12
correlation_matrix = df_cleaned.corr()
print("Correlation Matrix:")
print(correlation_matrix)